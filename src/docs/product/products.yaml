paths:
  /api/products:
    get:
      summary: Get the list of products
      tags:
        - Products
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Product'
    post:
      summary: Add a new product
      tags:
        - Products
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                  $ref: '#components/schemas/Product'
        '400':
          description: Bad request

  /api/products/{pid}:
    get:
      summary: Get information about a specific product
      tags:
        - Products
      parameters:
        - in: path
          name: pid
          required: true
          description: Product ID
          schema:
            $type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                  $ref: '#components/schemas/Product'
        '404':
          description: Product not found

    put:
      summary: Update information about a product
      tags:
        - Products
      parameters:
        - in: path
          name: pid
          required: true
          description: Product ID
          schema:
            $type: string
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                  $ref: '#components/schemas/Product'
        '404':
          description: Product not found

    delete:
      summary: Delete a product
      tags:
        - Products
      parameters:
        - in: path
          name: pid
          required: true
          description: Product ID
          schema:
            $type: string
      responses:
        '200':
          description: Product deleted successfully
        '404':
          description: Product not found

  /api/products/paginate:
    get:
      summary: Get a paginated list of products
      tags:
        - Products
      parameters:
        - in: query
          name: limit
          required: false
          description: Number of products to retrieve (default is 10)
          schema:
            $type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Product'

components:
  schemas:
    Product:
      type: object
      properties:
        title:
          type: string
          description: The title of the product.
        description:
          type: string
          description: The description of the product.
        code:
          type: string
          description: The unique code of the product.
        stock:
          type: integer
          description: The quantity in stock of the product.
        category:
          type: string
          description: The category to which the product belongs.
        price:
          type: number
          description: The price of the product.
        thumbnail:
          type: array
          items:
            type: string
          description: The list of product thumbnails.
        status:
          type: boolean
          description: Indicates if the product is active or not.
        owner:
          type: string
          description: The owner of the product.
        active:
          type: boolean
          description: Indicates if the product is active or not.
      required:
        - title
        - description
        - code
        - stock
        - category
        - price
security:
  - userAuth:
      - email: []
    